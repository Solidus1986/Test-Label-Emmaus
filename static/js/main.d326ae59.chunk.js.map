{"version":3,"sources":["logo.svg","asset/school.svg","listSchools/ListSchools.js","pagination/Pagination.js","map/Map.js","form/Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ListSchools","schools","results","console","log","className","numberOfSchools","map","school","key","schoolid","address","stateFull","schoolName","street","city","phone","schoolYearlyDetails","year","numberOfStudents","href","url","target","Pagination","props","pageLinks","i","active","currentPage","push","onClick","nextPage","pages","WrappedMap","withScriptjs","withGoogleMap","useState","selectSchool","setSelectSchool","defaultZoom","defaultCenter","lat","lng","position","latLong","latitude","longitude","icon","scaledSize","window","google","maps","Size","onCloseClick","Form","valueStates","setValueStates","valueSchools","setValueSchools","setResults","setSchools","setCurrentPage","onSubmit","event","preventDefault","process","fetch","then","res","json","result","localStorage","setItem","JSON","stringify","schoolList","error","value","onChange","currentTarget","type","required","isMarkerShown","googleMapURL","loadingElement","style","height","containerElement","mapElement","numberOfPages","pageNumber","App","src","logo","alt","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d326ae59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/school.c4cf3227.svg\";","import React from 'react';\n\nimport './ListSchools.css';\n\nfunction ListSchools({schools, results }) {\n\n    console.log(results, 'mes props')\n    return (\n        <div>\n        <div className=\"result\">Result(s) : {results.numberOfSchools}</div>\n            <div className=\"list\">\n\n            {  //   <div className=\"card\">\n              //   <div className=\"card-image\"></div>\n              //   <div className=\"card-text\">\n              //     <span className=\"date\">State</span>\n              //     <h5>SchoolName</h5>\n              //     <p>Lorem ipsum dolor sit amet consectetur, Ducimus, repudiandae temporibus omnis illum maxime quod deserunt eligendi dolor</p>\n              //   </div>\n              //   <div className=\"card-stats\">\n              //     <div className=\"stat\">\n              //       <div className=\"value\">N/A</div>\n              //       <div className=\"type\">Year</div>\n              //     </div>\n              //     <div className=\"stat border\">\n              //       <div className=\"value\">N/A</div>\n              //       <div className=\"type\">Students</div>\n              //     </div>\n              //     <div className=\"stat\">\n              //       <div className=\"icon\"></div>\n              //     </div>\n              //   </div>\n              // </div>\n            }\n\n                {schools.map((school) => (\n                    <div className=\"card\" key={school.schoolid}>\n                        <div className=\"card-image\"></div>\n                        <div className=\"card-text\">\n                            <span className=\"date\">{school.address.stateFull}</span>\n                            <h5>{school.schoolName}</h5>\n                            <p>{school.address.street} {school.address.city}</p>\n                            <p>phone: {school.phone}</p>\n                        </div>\n                    <div className=\"card-stats\">\n                  <div className=\"stat\">\n                    <div className=\"value\">{school.schoolYearlyDetails[0].year }</div>\n                    <div className=\"type\">Year</div>\n                  </div>\n                  <div className=\"stat\">\n                    <div className=\"value\">{school.schoolYearlyDetails[0].numberOfStudents }</div>\n                    <div className=\"type\">Students</div>\n                  </div>\n                  <div className=\"stat border\">\n                    <a href={school.url} target=\"_blank\"><div className=\"value icon\"></div></a>\n                  </div>\n                </div>\n              </div>\n                 ))}\n            </div>\n        </div>\n    )\n}\n\nexport default ListSchools\n\n    \n    \n    \n    \n    ","import React from 'react'\nimport './Pagination.css'\n\nconst Pagination = (props) => {\n\n    const pageLinks = []\n\n    for(let i = 1; i <= props.pages; i++) {\n        let active = props.currentPage === i ? 'active' : '';\n\n        pageLinks.push(<li className={`pagination-number ${active}`} key={i} onClick={() => props.nextPage(i)} ><a href={i}>{i}</a></li>)\n    }\n\n    return (\n        <div>\n            <div className=\"pagination-container\">\n                <ul className=\"pagination-list\">\n                    { pageLinks }\n                </ul>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Pagination\n","import React, { useState } from 'react'\nimport { GoogleMap, InfoWindow, Marker, withGoogleMap, withScriptjs } from \"react-google-maps\"\n\nimport icon from \"../asset/school.svg\"  \nfunction MapForSchool({schools}) {\n    console.log(schools, \"mes props schools pour le composant map\")\n\n    const [selectSchool, setSelectSchool] = useState(null)\n\n    return (\n\n    <GoogleMap \n        defaultZoom={4} \n        defaultCenter={{ lat: 37.090240, lng: -95.712891 }}\n    >\n        {schools.map((school) => (\n            <Marker \n                key={school.schoolid} \n                position={{lat:school.address.latLong.latitude , lng:school.address.latLong.longitude}} \n                onClick={() => {\n                setSelectSchool(school);\n                }}\n                icon={{\n                    url: icon,\n                    scaledSize: new window.google.maps.Size(50, 50)\n                }}\n           \n            />\n        ))}\n        {selectSchool && (\n            <InfoWindow \n                position={{lat:selectSchool.address.latLong.latitude , lng:selectSchool.address.latLong.longitude}}\n                onCloseClick={() => {\n                    setSelectSchool(null);\n                }}\n            >\n                <div>\n                    <h5>{selectSchool.schoolName}</h5>\n                    <p>{selectSchool.address.street} {selectSchool.address.city}</p>\n                    <p>phone: {selectSchool.phone}</p>\n                </div>\n            </InfoWindow>\n        )}\n\n    </GoogleMap>\n    );\n};\n\nexport const WrappedMap = withScriptjs(withGoogleMap(MapForSchool));\n\n","import React, { useState , useEffect } from 'react'\nimport './Form.css'\n\nimport ListSchools from '../listSchools/ListSchools'\nimport Pagination from '../pagination/Pagination'\nimport { WrappedMap } from '../map/Map'\n\nfunction Form() {\n    \n    const [valueStates, setValueStates] = useState('');\n    const [valueSchools, setValueSchools] = useState('');\n    const [results, setResults] = useState([])\n    const [schools, setSchools] = useState([]);\n    const [currentPage, setCurrentPage] = useState (1)\n  \n    const handleChangeStates = (event) => {\n      setValueStates(event.currentTarget.value);\n    };\n\n    const handleChangeSchools = (event) => {\n      setValueSchools(event.currentTarget.value);\n    };\n  \n \n    const handleSubmit = (event) => {\n      event.preventDefault();\n      console.log(process.env.REACT_APP_ID, \"app id\")\n      fetch(`https://api.schooldigger.com/v1.2/schools?st=${valueStates}&q=${valueSchools}&appID=${process.env.REACT_APP_ID}&appKey=${process.env.REACT_APP_KEY}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          \n          \n          localStorage.setItem('result', JSON.stringify(result))\n          setResults(result);\n          const schoolList = result.schoolList;\n          setSchools(schoolList)\n          \n\n        },\n        (error) => {\n          console.log(error);\n          \n        }\n      )\n      setValueStates('')\n      setValueSchools('')\n  \n    };\n\n  \n\n    const nextPage = (pageNumber) => {\n      fetch(`https://api.schooldigger.com/v1.2/schools?st=${valueStates}&q=${valueSchools}&page=${pageNumber}&appID=${process.env.REACT_APP_ID}&appKey=${process.env.REACT_APP_KEY}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          // console.log(result)\n          setResults(result);\n          setCurrentPage(pageNumber)\n          const schoolList = result.schoolList;\n          setSchools(schoolList)\n          \n\n        })\n    }\n    \n  \n  \n    return (\n      <div className=\"form-page\">\n        <h4>For exemple with state=ca & school=q ...see result</h4>\n        <form className=\"form-search\" onSubmit={handleSubmit}>\n        <label className=\"field\">\n          <input\n            value={valueStates}\n            onChange={handleChangeStates}\n            type=\"text\"\n            required\n          />\n          <span className=\"placeholder\">Enter State</span>\n          </label>\n          <label className=\"field\">\n          <input\n            value={valueSchools}\n            onChange={handleChangeSchools}\n            type=\"text\"\n            required\n          />\n          <span className=\"placeholder\">Enter School</span>\n          </label>\n        <button type=\"submit\">SEARCH</button>\n        </form>\n        <WrappedMap\n          isMarkerShown \n          googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_KEY}&v=3.exp&libraries=geometry,drawing,places`}\n          loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `400px` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n          schools={schools}\n          />\n        <ListSchools\n          results={results}\n          schools={schools}\n        />\n\n        {results.numberOfSchools > 10 ? <Pagination pages={results.numberOfPages} nextPage={nextPage} currentPage={currentPage} /> : '' }\n      </div>\n    );\n  };\n\nexport default Form\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Form from './form/Form'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>\n          Find an american school\n        </h1>  \n      </header>\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}